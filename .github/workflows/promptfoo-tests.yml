name: Promptfoo Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'tests/promptfoo/**'
      - '.claude/commands/**'
      - '.github/workflows/promptfoo-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'tests/promptfoo/**'
      - '.claude/commands/**'
      - '.github/workflows/promptfoo-tests.yml'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: tests/promptfoo/package-lock.json
    
    - name: Install dependencies
      working-directory: tests/promptfoo
      run: npm ci
    
    - name: Run linting
      working-directory: tests/promptfoo
      run: npm run lint || true
    
    - name: Run tests
      working-directory: tests/promptfoo
      run: npm test
      env:
        CI: true
    
    - name: Generate test report
      if: always()
      working-directory: tests/promptfoo
      run: |
        npm run test:report || true
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          tests/promptfoo/output/
          tests/promptfoo/test-report.html
        retention-days: 30
    
    - name: Comment PR
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let comment = '## üß™ Promptfoo Test Results\n\n';
          
          try {
            const reportPath = path.join('tests/promptfoo/test-report.json');
            if (fs.existsSync(reportPath)) {
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
              const passRate = ((report.passed / report.total) * 100).toFixed(1);
              
              comment += `‚úÖ **Passed:** ${report.passed}/${report.total} (${passRate}%)\n`;
              if (report.failed > 0) {
                comment += `‚ùå **Failed:** ${report.failed}\n`;
              }
              comment += `\nüìä [View detailed report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n`;
            } else {
              comment += '‚ö†Ô∏è Test report not found. Check the action logs for details.\n';
            }
          } catch (error) {
            comment += '‚ö†Ô∏è Error reading test results. Check the action logs for details.\n';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Check test results
      if: always()
      working-directory: tests/promptfoo
      run: |
        if [ -f "test-report.json" ]; then
          failed=$(jq -r '.failed' test-report.json)
          if [ "$failed" -gt 0 ]; then
            echo "‚ùå Tests failed!"
            exit 1
          else
            echo "‚úÖ All tests passed!"
          fi
        else
          echo "‚ö†Ô∏è Test report not found"
          exit 1
        fi